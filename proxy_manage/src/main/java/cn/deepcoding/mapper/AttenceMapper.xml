<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.deepcoding.dao.AttenceDao">
    <resultMap type="attence" id="attenceResult">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="work_date" property="workDate"/>
        <result column="check_type" property="checkType"/>
        <result column="base_check_time" property="baseCheckTime"/>
        <result column="user_check_time" property="userCheckTime"/>
        <result column="time_result" property="timeResult"/>
    </resultMap>
	<resultMap type="attenceGroup" id="attenceGroupResult">
	     <result column="count(1)" property="amount"/>
	     <result column="time_result" property="timeResult"/>
	</resultMap>
	<insert id="saveAttence" parameterType="attence">
        insert into attence(user_id,work_date,check_type,base_check_time,user_check_time,time_result) values
        <foreach collection="attences"   item="attence" separator=",">
        (#{attence.userId},#{attence.workDate},#{attence.checkType},#{attence.baseCheckTime},#{attence.userCheckTime},#{attence.timeResult})
        </foreach>
	</insert>
	
	<select id="listByPagetStudentAttence" resultMap="attenceResult">
		select * from attence 
		<where>
             <if test="workDateFrom!=null and workDateFrom!='' and  workDateTo!=null and  workDateTo!=''">
                      and work_date between #{workDateFrom} and #{workDateTo}
             </if>
             <if test="userId!=null and userId!=''">
                     and user_id =#{userId}
             </if>
          </where>
          order by work_date,base_check_time 
		  limit #{page.start},#{page.rows}
	</select>
	
	<select id="countStudentAttence" resultType="int">
	    select count(*) from attence
	    <where>
             <if test="workDateFrom!=null and workDateFrom!='' and  workDateTo!=null and  workDateTo!=''">
                      and work_date between #{workDateFrom} and #{workDateTo}
             </if>
             <if test="userId!=null and userId!=''">
                     and user_id =#{userId}
             </if>
          </where>
	</select>
	
	<select id="getAttenceCount"  resultMap="attenceGroupResult">
	     select count(1),time_result from attence where user_id= #{userId} and work_date between #{workDateFrom} and #{workDateTo} group by time_result
	</select>
	
	<select id="getMaxWorkDate" resultType="String">
	     select MAX(work_date) from attence 
	</select>
	
	<!-- app -->
	<!-- 根据 钉钉id 查询最大日期 -->
	<select id="getMaxWorkDate1" resultType="String">
	     select MAX(work_date) from attence where user_id =#{userId}
	</select>
	<!-- app  根据 钉钉唯一标识符 查询最近一个月的考勤记录 -->
	<select id="getAttenceCount1" parameterType="String" resultMap="attenceGroupResult">
		SELECT count(1),time_result FROM attence 
		<where>
			<if test="userId != null and userId != '' ">
				and user_id=#{userId}
			</if>
			<if test="1==1">
			  and DATE_FORMAT(work_date,'%Y-%m')>DATE_FORMAT(date_sub(curdate(), interval 1 month),'%Y-%m')
			</if>
		</where> 
		 group by time_result
	</select>
	<!-- app  根据 钉钉唯一标识符 查询最近 三个月的考勤记录 -->
	<select id="getAttenceCount2" parameterType="String" resultMap="attenceGroupResult">
		SELECT count(1),time_result FROM attence 
		<where>
			<if test="userId != null and userId != '' ">
				and user_id=#{userId}
			</if>
			<if test="1==1">
			  and DATE_FORMAT(work_date,'%Y-%m')>DATE_FORMAT(date_sub(curdate(), interval 3 month),'%Y-%m')
			</if>
		</where> 
		 group by time_result
	</select>
	<!-- app  根据 钉钉唯一标识符 查询最近  六个月的考勤记录 -->
	<select id="getAttenceCount3" parameterType="String" resultMap="attenceGroupResult">
		SELECT count(1),time_result FROM attence 
		<where>
			<if test="userId != null and userId != '' ">
				and user_id=#{userId}
			</if>
			<if test="1==1">
			   and DATE_FORMAT(work_date,'%Y-%m')>DATE_FORMAT(date_sub(curdate(), interval 6 month),'%Y-%m')
			</if>
		</where> 
		 group by time_result
	</select>
	<!-- app  根据钉钉唯一标识符 查询最近一个月的 所有日期 -->
	<select id="getAttenceWorkDate1" parameterType="String" resultMap="attenceResult">
		select DISTINCT(work_date) from attence 
		<where>
			<if test="userId != null and userId != '' ">
				and user_id=#{userId}
			</if>
			<if test="1==1">
			   and DATE_FORMAT(work_date,'%Y-%m')>DATE_FORMAT(date_sub(curdate(), interval 1 month),'%Y-%m')
			</if>
		</where> 
	</select>
	<!-- app  根据钉钉唯一标识符 查询最近三个月的 所有日期 -->
	<select id="getAttenceWorkDate2" parameterType="String" resultMap="attenceResult">
		select DISTINCT(work_date) from attence 
		<where>
			<if test="userId != null and userId != '' ">
				and user_id=#{userId}
			</if>
			<if test="1==1">
			   and DATE_FORMAT(work_date,'%Y-%m')>DATE_FORMAT(date_sub(curdate(), interval 3 month),'%Y-%m')
			</if>
		</where> 
	</select>
	<!-- app  根据钉钉唯一标识符 查询最近六个月的 所有日期 -->
	<select id="getAttenceWorkDate3" parameterType="String" resultMap="attenceResult">
		select DISTINCT(work_date) from attence 
		<where>
			<if test="userId != null and userId != '' ">
				and user_id=#{userId}
			</if>
			<if test="1==1">
			   and DATE_FORMAT(work_date,'%Y-%m')>DATE_FORMAT(date_sub(curdate(), interval 6 month),'%Y-%m')
			</if>
		</where> 
	</select>
	<!-- app  根据钉钉唯一标识符 和日期  查询考勤记录 -->
	<select id="getAttenceCountByWorkDate" parameterType="String" resultMap="attenceGroupResult">
		SELECT count(1),time_result FROM attence 
		<where>
			<if test="userId != null and userId != '' ">
				and user_id=#{userId}
			</if>
			<if test="workDate != null and workDate != '' ">
				and work_date=#{workDate}
			</if>
			group by time_result
		</where> 
	</select>

</mapper>



