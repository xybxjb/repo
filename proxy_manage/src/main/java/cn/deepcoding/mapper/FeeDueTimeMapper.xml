<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.deepcoding.dao.FeeDueTimeDao">

	<resultMap type="cn.deepcoding.model.FeeDueTime" id="feeDueTimeResult">
		<id column="id" property="id" />
		 <result column="type" property="type" />
		 <result column="ent_date" property="entDate" />
		 <result column="last_payment_time" property="lastPaymentTime" />
		 <result column="continue_pay" property="continuePay" />
			<association property="student" column="student_id"
			select="cn.deepcoding.dao.StudentDao.getById"></association>
	</resultMap>
<select id="feeDueExist" resultMap="feeDueTimeResult">
	SELECT id,type,ent_date,last_payment_time,continue_pay from  fee_due_time where student_id = #{stuId} and type = #{type}
			
</select>

	<select id="getById" resultMap="feeDueTimeResult">
		select * from fee_due_time where id=#{id}
	</select>
 
<insert id="saveTuition" parameterType="cn.deepcoding.model.FeeDueTime" useGeneratedKeys="true" keyColumn="id" keyProperty="id">

insert into fee_due_time(type,ent_date,student_id,last_payment_time,continue_pay) Values(#{type},#{entDate},#{stuId},now(),#{continuePay})

</insert>

<insert id="save" parameterType="cn.deepcoding.model.FeeDueTime" useGeneratedKeys="true" keyColumn="id" keyProperty="id">

insert into fee_due_time(type,ent_date,student_id,last_payment_time,continue_pay) Values(#{type},#{entDate},#{student.id},now(),#{continuePay})

</insert>

<update id="updateTuition" >

update fee_due_time set last_payment_time = now(),continue_pay = #{continuePay},ent_date = DATE_ADD(ent_date,INTERVAL #{num} MONTH) where  student_id= #{stuId} and type=#{type}

</update>
<update id="updateTuition2" >

update fee_due_time set last_payment_time = now(),continue_pay = #{continuePay},ent_date = #{entDate} where  student_id= #{stuId} and type=#{type}

</update>



<select id="select"  resultMap="feeDueTimeResult">


select *,max(create_time) from fee_due_time  where student_id= #{id} and type = #{type} order by create_time asc


</select>



<update id="updateFeeDueTime" >

update fee_due_time set last_payment_time = now(),continue_pay = #{continuePay},ent_date = #{endDate} where  student_id= #{stuId} and type=#{type}

</update>




</mapper> 